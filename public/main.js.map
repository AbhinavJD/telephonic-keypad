{"version":3,"sources":["./src/app/keypad/keypad.component.ts","./src/app/keypad/keypad.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-keypad',\n  templateUrl: './keypad.component.html',\n  styleUrls: ['./keypad.component.styl']\n})\nexport class KeypadComponent implements OnInit {\n  buttonHistory = 'BUTTONHISTORY'\n  historyClickedText = '';\n  sessionHistory = [];\n  constructor() { }\n  keypad = [\n    [\n      {\"numericKey\":\"1\", \"alphabetKey\":\"&nbsp;\"},\n      {\"numericKey\":\"2\", \"alphabetKey\":\"ABC\"},\n      {\"numericKey\":\"3\", \"alphabetKey\":\"DEF\"}\n    ],\n    [\n      {\"numericKey\":\"4\", \"alphabetKey\":\"GHI\"},\n      {\"numericKey\":\"5\", \"alphabetKey\":\"JKL\"},\n      {\"numericKey\":\"6\", \"alphabetKey\":\"MNO\"}\n    ],\n    [\n      {\"numericKey\":\"7\", \"alphabetKey\":\"PQRS\"},\n      {\"numericKey\":\"8\", \"alphabetKey\":\"TUV\"},\n      {\"numericKey\":\"9\", \"alphabetKey\":\"WXYZ\"}\n    ],\n    [\n      {\"numericKey\":\"*\", \"alphabetKey\":\"&nbsp;\"},\n      {\"numericKey\":\"0\", \"alphabetKey\":\"&nbsp;\"},\n      {\"numericKey\":\"#\", \"alphabetKey\":\"&nbsp;\"}\n    ],\n  ]\n  ngOnInit(): void {\n    const val = JSON.parse(this.getItem());\n    if(val != null){\n      this.sessionHistory = val;\n    }\n  }\n  buttonClicked(row, col){\n    const time = this.getTime();\n    const keyClickedOn = this.keypad[row][col].numericKey \n    this.historyClickedText = 'User Clicked on: ' + keyClickedOn + ', the cordinated are: [' + row +','+col+']' + ',<br>Time Stamp: ' + time;\n    this.saveToStorage();\n  }\n  saveToStorage(){\n    const val = JSON.parse(this.getItem());\n    if(val != null){\n      this.sessionHistory = val;\n      this.sessionHistory.push(this.historyClickedText)\n      this.setItem(this.sessionHistory)\n    } else {\n      this.sessionHistory.push(this.historyClickedText)\n      this.setItem(this.sessionHistory)\n    }\n\n  }\n  getTime(){\n    return new Date();\n  }\n  getItem(){\n    return localStorage.getItem(this.buttonHistory);\n  }\n  setItem(sessionHistory){\n    localStorage.setItem(this.buttonHistory, JSON.stringify(sessionHistory))\n  }\n}\n","<div class=\"main-wrapper\">\n    <div class=\"page-container\">\n        <div class=\"comp-header\">\n            <h3>Keypad</h3>\n        </div>\n        <div class=\"comp-body row\">\n            <div class=\"keypad-container col\">\n                <div class=\"row-{{i}} keypad-Container-row row\" *ngFor=\"let keypadRow of keypad; let i = index\">\n                    <div class=\"keypad-{{keyIndex}} keypad col\" *ngFor=\"let key of keypadRow; let keyIndex = index\" (click)=\"buttonClicked(i,keyIndex)\">\n                        <span class=\"characters\" innerHTML='{{key.alphabetKey}}'></span>\n                        <span class=\"numbers\" innerHTML='{{key.numericKey}}'></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"history-container col\">\n                <h4>History</h4>\n                <div class=\"message\" *ngFor=\"let item of sessionHistory\" innerHTML='{{item}}'></div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.styl']\n})\nexport class AppComponent {\n  title = 'telephonic-keypad';\n}\n","<app-keypad></app-keypad>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { KeypadComponent } from './keypad/keypad.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    KeypadComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}